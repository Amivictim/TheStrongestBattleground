-- ðŸŒœðŸ™‰ðŸ™ˆðŸ™‰ðŸŒ› --

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local localPlayer = Players.LocalPlayer
repeat task.wait() until localPlayer and localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart")

local function getCharacterAndRootPart()
    local character = localPlayer.Character
    if character then
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            return character, rootPart
        end
    end
    return nil, nil
end

local mainUsername = mainuser
local mainPosition = Vector3.new(361, 440, 428)
local otherPosition = Vector3.new(359, 440, 425)
local maxDistance = 3

local function onCharacterAdded(character)
    local rootPart
    character:WaitForChild("HumanoidRootPart")
    rootPart = character.HumanoidRootPart

    local function keepCharacterInPosition(targetPosition)
        if rootPart and (rootPart.Position - targetPosition).Magnitude > maxDistance then
            rootPart.CFrame = CFrame.new(targetPosition)
        end
    end

    local function findClosestPlayer()
        local closestPlayer = nil
        local closestDistance = math.huge
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local distance = (rootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = player
                end
            end
        end
        return closestPlayer
    end

    local function rotateToClosestPlayer()
        local closestPlayer = findClosestPlayer()
        if closestPlayer and closestPlayer.Character then
            local targetPos = closestPlayer.Character.HumanoidRootPart.Position
            local lookAtCFrame = CFrame.lookAt(rootPart.Position, Vector3.new(targetPos.X, rootPart.Position.Y, targetPos.Z))
            rootPart.CFrame = lookAtCFrame
        end
    end

    local function fireEvents()
        local args1 = {
            [1] = {
                ["Mobile"] = true,
                ["Goal"] = "LeftClick"
            }
        }
        game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args1))

        task.wait(0.1)

        local skills = {"Blitz Shot", "Jet Dive", "Ignition Burst", "Machine Gun Blows"}

        for _, skill in ipairs(skills) do
            local tool = localPlayer.Backpack:FindFirstChild(skill)
            if tool then
                local args2 = {
                    [1] = {
                        ["Tool"] = tool,
                        ["Goal"] = "Console Move"
                    }
                }
                game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args2))
            end
            task.wait(0.1)
        end
    end

    task.spawn(function()
        while true do
            if localPlayer.Name == mainUsername then
                keepCharacterInPosition(mainPosition)
                rotateToClosestPlayer()
                fireEvents()
            else
                keepCharacterInPosition(otherPosition)
            end
            task.wait(0.1)
        end
    end)
end

local function monitorDeath()
    local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
    character:WaitForChild("Humanoid").Died:Connect(function()
        local newCharacter = localPlayer.CharacterAdded:Wait()
        onCharacterAdded(newCharacter)
    end)

    onCharacterAdded(character)
end

local function monitorKills()
    local leaderstats = localPlayer:WaitForChild("leaderstats")
    local kills = leaderstats:WaitForChild("Kills")

    kills.Changed:Connect(function()
        if kills.Value % 9 == 0 and kills.Value > 0 then
            local resetArgs = {
                [1] = {
                    ["Goal"] = "Reset"
                }
            }
            game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(resetArgs))
        end
    end)
end

monitorDeath()
monitorKills()
